window.jest_html_reporters_callback__({"numFailedTestSuites":2,"numFailedTests":9,"numPassedTestSuites":1,"numPassedTests":53,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":3,"numTotalTests":62,"startTime":1746070994001,"success":false,"testResults":[{"numFailingTests":0,"numPassingTests":20,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1746070997409,"runtime":2558,"slow":false,"start":1746070994851},"testFilePath":"/Users/summersw/Projects/xjx/test/unit/core/utils/json-utils.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["JsonUtil","isEmpty"],"duration":5,"failureMessages":[],"fullName":"JsonUtil isEmpty should return true for null and undefined","status":"passed","title":"should return true for null and undefined"},{"ancestorTitles":["JsonUtil","isEmpty"],"duration":1,"failureMessages":[],"fullName":"JsonUtil isEmpty should return true for empty arrays","status":"passed","title":"should return true for empty arrays"},{"ancestorTitles":["JsonUtil","isEmpty"],"duration":0,"failureMessages":[],"fullName":"JsonUtil isEmpty should return true for empty objects","status":"passed","title":"should return true for empty objects"},{"ancestorTitles":["JsonUtil","isEmpty"],"duration":0,"failureMessages":[],"fullName":"JsonUtil isEmpty should return false for non-empty arrays","status":"passed","title":"should return false for non-empty arrays"},{"ancestorTitles":["JsonUtil","isEmpty"],"duration":1,"failureMessages":[],"fullName":"JsonUtil isEmpty should return false for non-empty objects","status":"passed","title":"should return false for non-empty objects"},{"ancestorTitles":["JsonUtil","isEmpty"],"duration":0,"failureMessages":[],"fullName":"JsonUtil isEmpty should return false for primitive values","status":"passed","title":"should return false for primitive values"},{"ancestorTitles":["JsonUtil","safeStringify"],"duration":0,"failureMessages":[],"fullName":"JsonUtil safeStringify should stringify a simple object","status":"passed","title":"should stringify a simple object"},{"ancestorTitles":["JsonUtil","safeStringify"],"duration":1,"failureMessages":[],"fullName":"JsonUtil safeStringify should handle circular references gracefully","status":"passed","title":"should handle circular references gracefully"},{"ancestorTitles":["JsonUtil","safeStringify"],"duration":0,"failureMessages":[],"fullName":"JsonUtil safeStringify should respect the indent parameter","status":"passed","title":"should respect the indent parameter"},{"ancestorTitles":["JsonUtil","deepClone"],"duration":1,"failureMessages":[],"fullName":"JsonUtil deepClone should create a deep copy of an object","status":"passed","title":"should create a deep copy of an object"},{"ancestorTitles":["JsonUtil","deepClone"],"duration":11,"failureMessages":[],"fullName":"JsonUtil deepClone should throw an error when cloning non-serializable objects","status":"passed","title":"should throw an error when cloning non-serializable objects"},{"ancestorTitles":["JsonUtil","deepMerge"],"duration":0,"failureMessages":[],"fullName":"JsonUtil deepMerge should merge two simple objects","status":"passed","title":"should merge two simple objects"},{"ancestorTitles":["JsonUtil","deepMerge"],"duration":1,"failureMessages":[],"fullName":"JsonUtil deepMerge should handle nested objects correctly","status":"passed","title":"should handle nested objects correctly"},{"ancestorTitles":["JsonUtil","deepMerge"],"duration":0,"failureMessages":[],"fullName":"JsonUtil deepMerge should replace arrays instead of merging them","status":"passed","title":"should replace arrays instead of merging them"},{"ancestorTitles":["JsonUtil","deepMerge"],"duration":0,"failureMessages":[],"fullName":"JsonUtil deepMerge should handle null or undefined inputs","status":"passed","title":"should handle null or undefined inputs"},{"ancestorTitles":["JsonUtil","objectToXJX"],"duration":1,"failureMessages":[],"fullName":"JsonUtil objectToXJX should convert primitive values","status":"passed","title":"should convert primitive values"},{"ancestorTitles":["JsonUtil","objectToXJX"],"duration":0,"failureMessages":[],"fullName":"JsonUtil objectToXJX should convert arrays to children","status":"passed","title":"should convert arrays to children"},{"ancestorTitles":["JsonUtil","objectToXJX"],"duration":1,"failureMessages":[],"fullName":"JsonUtil objectToXJX should convert objects to children","status":"passed","title":"should convert objects to children"},{"ancestorTitles":["JsonUtil","objectToXJX"],"duration":0,"failureMessages":[],"fullName":"JsonUtil objectToXJX should handle nested structures","status":"passed","title":"should handle nested structures"},{"ancestorTitles":["JsonUtil","objectToXJX"],"duration":0,"failureMessages":[],"fullName":"JsonUtil objectToXJX should wrap result with a root element if provided","status":"passed","title":"should wrap result with a root element if provided"}]},{"numFailingTests":5,"numPassingTests":24,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1746070997536,"runtime":2685,"slow":false,"start":1746070994851},"testFilePath":"/Users/summersw/Projects/xjx/test/unit/core/utils/xml-utils.test.ts","failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mXmlUtil › prettyPrintXml › should format XML with correct indentation\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"<root><child><grandchild>text</grandchild></child></root>\"\u001b[39m\n    Received: \u001b[31m\"<root><child><grandchild>\u001b[7m \u001b[27mtext\u001b[7m \u001b[27m</grandchild></child></root>\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 19 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 20 |\u001b[39m       \u001b[90m// Use normalizeXML to remove whitespace differences for comparison\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 21 |\u001b[39m       expect(normalizeXML(result))\u001b[33m.\u001b[39mtoBe(normalizeXML(expected))\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 22 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 23 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 24 |\u001b[39m     it(\u001b[32m'should respect config indent setting'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/unit/core/utils/xml-utils.test.ts\u001b[39m\u001b[0m\u001b[2m:21:36)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mXmlUtil › prettyPrintXml › should respect config indent setting\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"<root><child>text</child></root>\"\u001b[39m\n    Received: \u001b[31m\"<root><child>\u001b[7m \u001b[27mtext\u001b[7m \u001b[27m</child></root>\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 32 |\u001b[39m       \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m customXmlUtil\u001b[33m.\u001b[39mprettyPrintXml(input)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 33 |\u001b[39m       \u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 34 |\u001b[39m       expect(normalizeXML(result))\u001b[33m.\u001b[39mtoBe(normalizeXML(expected))\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 35 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 36 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 37 |\u001b[39m     it(\u001b[32m'should handle XML with attributes'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/unit/core/utils/xml-utils.test.ts\u001b[39m\u001b[0m\u001b[2m:34:36)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mXmlUtil › prettyPrintXml › should handle XML with attributes\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"<root attr=\\\"value\\\"><child id=\\\"1\\\">text</child></root>\"\u001b[39m\n    Received: \u001b[31m\"<root attr=\\\"value\\\"><child id=\\\"1\\\">\u001b[7m \u001b[27mtext\u001b[7m \u001b[27m</child></root>\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 41 |\u001b[39m       \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m xmlUtil\u001b[33m.\u001b[39mprettyPrintXml(input)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 42 |\u001b[39m       \u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 43 |\u001b[39m       expect(normalizeXML(result))\u001b[33m.\u001b[39mtoBe(normalizeXML(expected))\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 44 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 45 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 46 |\u001b[39m     it(\u001b[32m'should handle self-closing tags'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/unit/core/utils/xml-utils.test.ts\u001b[39m\u001b[0m\u001b[2m:43:36)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mXmlUtil › escapeXML and unescapeXML › should not change already escaped entities\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"Already &lt;escaped&gt; &amp; &quot;content&quot;\"\u001b[39m\n    Received: \u001b[31m\"Already &\u001b[7mamp;\u001b[27mlt;escaped&\u001b[7mamp;\u001b[27mgt; &amp;\u001b[7mamp;\u001b[27m &\u001b[7mamp;\u001b[27mquot;content&\u001b[7mamp;\u001b[27mquot;\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 161 |\u001b[39m       \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m xmlUtil\u001b[33m.\u001b[39mescapeXML(input)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 162 |\u001b[39m       \u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 163 |\u001b[39m       expect(result)\u001b[33m.\u001b[39mtoBe(input)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 164 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 165 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 166 |\u001b[39m     it(\u001b[32m'should unescape XML entities back to characters'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/unit/core/utils/xml-utils.test.ts\u001b[39m\u001b[0m\u001b[2m:163:22)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mXmlUtil › namespace helpers › extractLocalName › should handle edge cases correctly\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"\"\u001b[39m\n    Received: \u001b[31m\":\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 225 |\u001b[39m       it(\u001b[32m'should handle edge cases correctly'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 226 |\u001b[39m         expect(xmlUtil\u001b[33m.\u001b[39mextractLocalName(\u001b[32m''\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[32m''\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 227 |\u001b[39m         expect(xmlUtil\u001b[33m.\u001b[39mextractLocalName(\u001b[32m':'\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[32m''\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// Empty local name\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 228 |\u001b[39m         expect(xmlUtil\u001b[33m.\u001b[39mextractLocalName(\u001b[32m'ns:'\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[32m''\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// Empty local name\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 229 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 230 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/unit/core/utils/xml-utils.test.ts\u001b[39m\u001b[0m\u001b[2m:227:47)\u001b[22m\u001b[2m\u001b[22m\n","testResults":[{"ancestorTitles":["XmlUtil","prettyPrintXml"],"duration":12,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"<root><child><grandchild>text</grandchild></child></root>\"\u001b[39m\nReceived: \u001b[31m\"<root><child><grandchild>\u001b[7m \u001b[27mtext\u001b[7m \u001b[27m</grandchild></child></root>\"\u001b[39m\n    at Object.<anonymous> (/Users/summersw/Projects/xjx/test/unit/core/utils/xml-utils.test.ts:21:36)\n    at Promise.then.completed (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/summersw/Projects/xjx/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/summersw/Projects/xjx/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/summersw/Projects/xjx/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"XmlUtil prettyPrintXml should format XML with correct indentation","status":"failed","title":"should format XML with correct indentation"},{"ancestorTitles":["XmlUtil","prettyPrintXml"],"duration":2,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"<root><child>text</child></root>\"\u001b[39m\nReceived: \u001b[31m\"<root><child>\u001b[7m \u001b[27mtext\u001b[7m \u001b[27m</child></root>\"\u001b[39m\n    at Object.<anonymous> (/Users/summersw/Projects/xjx/test/unit/core/utils/xml-utils.test.ts:34:36)\n    at Promise.then.completed (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/summersw/Projects/xjx/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/summersw/Projects/xjx/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/summersw/Projects/xjx/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"XmlUtil prettyPrintXml should respect config indent setting","status":"failed","title":"should respect config indent setting"},{"ancestorTitles":["XmlUtil","prettyPrintXml"],"duration":2,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"<root attr=\\\"value\\\"><child id=\\\"1\\\">text</child></root>\"\u001b[39m\nReceived: \u001b[31m\"<root attr=\\\"value\\\"><child id=\\\"1\\\">\u001b[7m \u001b[27mtext\u001b[7m \u001b[27m</child></root>\"\u001b[39m\n    at Object.<anonymous> (/Users/summersw/Projects/xjx/test/unit/core/utils/xml-utils.test.ts:43:36)\n    at Promise.then.completed (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/summersw/Projects/xjx/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/summersw/Projects/xjx/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/summersw/Projects/xjx/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"XmlUtil prettyPrintXml should handle XML with attributes","status":"failed","title":"should handle XML with attributes"},{"ancestorTitles":["XmlUtil","prettyPrintXml"],"duration":1,"failureMessages":[],"fullName":"XmlUtil prettyPrintXml should handle self-closing tags","status":"passed","title":"should handle self-closing tags"},{"ancestorTitles":["XmlUtil","prettyPrintXml"],"duration":1,"failureMessages":[],"fullName":"XmlUtil prettyPrintXml should preserve CDATA sections","status":"passed","title":"should preserve CDATA sections"},{"ancestorTitles":["XmlUtil","prettyPrintXml"],"duration":1,"failureMessages":[],"fullName":"XmlUtil prettyPrintXml should preserve comments","status":"passed","title":"should preserve comments"},{"ancestorTitles":["XmlUtil","prettyPrintXml"],"duration":1,"failureMessages":[],"fullName":"XmlUtil prettyPrintXml should preserve processing instructions","status":"passed","title":"should preserve processing instructions"},{"ancestorTitles":["XmlUtil","validateXML"],"duration":2,"failureMessages":[],"fullName":"XmlUtil validateXML should validate well-formed XML","status":"passed","title":"should validate well-formed XML"},{"ancestorTitles":["XmlUtil","validateXML"],"duration":2,"failureMessages":[],"fullName":"XmlUtil validateXML should reject malformed XML","status":"passed","title":"should reject malformed XML"},{"ancestorTitles":["XmlUtil","validateXML"],"duration":1,"failureMessages":[],"fullName":"XmlUtil validateXML should reject XML with unclosed tags","status":"passed","title":"should reject XML with unclosed tags"},{"ancestorTitles":["XmlUtil","validateXML"],"duration":0,"failureMessages":[],"fullName":"XmlUtil validateXML should reject XML with mismatched tags","status":"passed","title":"should reject XML with mismatched tags"},{"ancestorTitles":["XmlUtil","ensureXMLDeclaration"],"duration":1,"failureMessages":[],"fullName":"XmlUtil ensureXMLDeclaration should add XML declaration if missing","status":"passed","title":"should add XML declaration if missing"},{"ancestorTitles":["XmlUtil","ensureXMLDeclaration"],"duration":0,"failureMessages":[],"fullName":"XmlUtil ensureXMLDeclaration should not add XML declaration if already present","status":"passed","title":"should not add XML declaration if already present"},{"ancestorTitles":["XmlUtil","ensureXMLDeclaration"],"duration":0,"failureMessages":[],"fullName":"XmlUtil ensureXMLDeclaration should handle whitespace in input","status":"passed","title":"should handle whitespace in input"},{"ancestorTitles":["XmlUtil","escapeXML and unescapeXML"],"duration":0,"failureMessages":[],"fullName":"XmlUtil escapeXML and unescapeXML should escape special XML characters","status":"passed","title":"should escape special XML characters"},{"ancestorTitles":["XmlUtil","escapeXML and unescapeXML"],"duration":1,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"Already &lt;escaped&gt; &amp; &quot;content&quot;\"\u001b[39m\nReceived: \u001b[31m\"Already &\u001b[7mamp;\u001b[27mlt;escaped&\u001b[7mamp;\u001b[27mgt; &amp;\u001b[7mamp;\u001b[27m &\u001b[7mamp;\u001b[27mquot;content&\u001b[7mamp;\u001b[27mquot;\"\u001b[39m\n    at Object.<anonymous> (/Users/summersw/Projects/xjx/test/unit/core/utils/xml-utils.test.ts:163:22)\n    at Promise.then.completed (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/summersw/Projects/xjx/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/summersw/Projects/xjx/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/summersw/Projects/xjx/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"XmlUtil escapeXML and unescapeXML should not change already escaped entities","status":"failed","title":"should not change already escaped entities"},{"ancestorTitles":["XmlUtil","escapeXML and unescapeXML"],"duration":0,"failureMessages":[],"fullName":"XmlUtil escapeXML and unescapeXML should unescape XML entities back to characters","status":"passed","title":"should unescape XML entities back to characters"},{"ancestorTitles":["XmlUtil","escapeXML and unescapeXML"],"duration":0,"failureMessages":[],"fullName":"XmlUtil escapeXML and unescapeXML should handle empty strings","status":"passed","title":"should handle empty strings"},{"ancestorTitles":["XmlUtil","escapeXML and unescapeXML"],"duration":0,"failureMessages":[],"fullName":"XmlUtil escapeXML and unescapeXML should handle non-string inputs gracefully","status":"passed","title":"should handle non-string inputs gracefully"},{"ancestorTitles":["XmlUtil","escapeXML and unescapeXML"],"duration":0,"failureMessages":[],"fullName":"XmlUtil escapeXML and unescapeXML should be reversible","status":"passed","title":"should be reversible"},{"ancestorTitles":["XmlUtil","namespace helpers","extractPrefix"],"duration":2,"failureMessages":[],"fullName":"XmlUtil namespace helpers extractPrefix should extract namespace prefix from qualified name","status":"passed","title":"should extract namespace prefix from qualified name"},{"ancestorTitles":["XmlUtil","namespace helpers","extractPrefix"],"duration":1,"failureMessages":[],"fullName":"XmlUtil namespace helpers extractPrefix should return null for names without prefix","status":"passed","title":"should return null for names without prefix"},{"ancestorTitles":["XmlUtil","namespace helpers","extractPrefix"],"duration":0,"failureMessages":[],"fullName":"XmlUtil namespace helpers extractPrefix should handle edge cases correctly","status":"passed","title":"should handle edge cases correctly"},{"ancestorTitles":["XmlUtil","namespace helpers","extractLocalName"],"duration":0,"failureMessages":[],"fullName":"XmlUtil namespace helpers extractLocalName should extract local name from qualified name","status":"passed","title":"should extract local name from qualified name"},{"ancestorTitles":["XmlUtil","namespace helpers","extractLocalName"],"duration":0,"failureMessages":[],"fullName":"XmlUtil namespace helpers extractLocalName should return the original name if no prefix exists","status":"passed","title":"should return the original name if no prefix exists"},{"ancestorTitles":["XmlUtil","namespace helpers","extractLocalName"],"duration":1,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"\"\u001b[39m\nReceived: \u001b[31m\":\"\u001b[39m\n    at Object.<anonymous> (/Users/summersw/Projects/xjx/test/unit/core/utils/xml-utils.test.ts:227:47)\n    at Promise.then.completed (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/summersw/Projects/xjx/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/summersw/Projects/xjx/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/summersw/Projects/xjx/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"XmlUtil namespace helpers extractLocalName should handle edge cases correctly","status":"failed","title":"should handle edge cases correctly"},{"ancestorTitles":["XmlUtil","namespace helpers","createQualifiedName"],"duration":0,"failureMessages":[],"fullName":"XmlUtil namespace helpers createQualifiedName should create qualified name from prefix and local name","status":"passed","title":"should create qualified name from prefix and local name"},{"ancestorTitles":["XmlUtil","namespace helpers","createQualifiedName"],"duration":0,"failureMessages":[],"fullName":"XmlUtil namespace helpers createQualifiedName should return just the local name when prefix is null","status":"passed","title":"should return just the local name when prefix is null"},{"ancestorTitles":["XmlUtil","namespace helpers","createQualifiedName"],"duration":0,"failureMessages":[],"fullName":"XmlUtil namespace helpers createQualifiedName should handle empty inputs","status":"passed","title":"should handle empty inputs"}]},{"numFailingTests":4,"numPassingTests":9,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1746070997604,"runtime":2753,"slow":false,"start":1746070994851},"testFilePath":"/Users/summersw/Projects/xjx/test/unit/core/xjx.test.ts","failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mXJX Core › XML to JSON conversion › should convert simple XML to JSON\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m, \u001b[22m\u001b[32mvalue\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected path: \u001b[32m\"$val\"\u001b[39m\n    Received path: \u001b[31m[]\u001b[39m\n\n    Expected value: \u001b[32m\"value\"\u001b[39m\n    Received value: \u001b[31m{\"$children\": [{\"$val\": \"value\"}]}\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 25 |\u001b[39m       expect(result\u001b[33m.\u001b[39mroot)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'$children'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 26 |\u001b[39m       expect(result\u001b[33m.\u001b[39mroot\u001b[33m.\u001b[39m$children[\u001b[35m0\u001b[39m])\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'item'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 27 |\u001b[39m       expect(result\u001b[33m.\u001b[39mroot\u001b[33m.\u001b[39m$children[\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39mitem)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'$val'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'value'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 28 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 29 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 30 |\u001b[39m     it(\u001b[32m'should handle XML attributes'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/unit/core/xjx.test.ts\u001b[39m\u001b[0m\u001b[2m:27:45)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mXJX Core › JSON to XML conversion › should convert simple JSON to XML\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"<root><item>value</item></root>\"\u001b[39m\n    Received: \u001b[31m\"<root><item>\u001b[7m \u001b[27mvalue\u001b[7m \u001b[27m</item></root>\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 80 |\u001b[39m       \u001b[36mconst\u001b[39m expected \u001b[33m=\u001b[39m \u001b[32m'<root><item>value</item></root>'\u001b[39m\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 81 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 82 |\u001b[39m       expect(normalizeXML(result))\u001b[33m.\u001b[39mtoBe(normalizeXML(expected))\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 83 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 84 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 85 |\u001b[39m     it(\u001b[32m'should handle attributes'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/unit/core/xjx.test.ts\u001b[39m\u001b[0m\u001b[2m:82:36)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mXJX Core › JSON to XML conversion › should handle attributes\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"<root><item id=\\\"123\\\">value</item></root>\"\u001b[39m\n    Received: \u001b[31m\"<root><item id=\\\"123\\\">\u001b[7m \u001b[27mvalue\u001b[7m \u001b[27m</item></root>\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 106 |\u001b[39m       \u001b[36mconst\u001b[39m expected \u001b[33m=\u001b[39m \u001b[32m'<root><item id=\"123\">value</item></root>'\u001b[39m\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 107 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 108 |\u001b[39m       expect(normalizeXML(result))\u001b[33m.\u001b[39mtoBe(normalizeXML(expected))\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 109 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 110 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 111 |\u001b[39m     it(\u001b[32m'should generate CDATA sections'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/unit/core/xjx.test.ts\u001b[39m\u001b[0m\u001b[2m:108:36)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mXJX Core › JSON to XML conversion › should generate comments\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"<root><!-- comment --><item>value</item></root>\"\u001b[39m\n    Received: \u001b[31m\"<root><!-- comment --><item>\u001b[7m \u001b[27mvalue\u001b[7m \u001b[27m</item></root>\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 151 |\u001b[39m       \u001b[36mconst\u001b[39m expected \u001b[33m=\u001b[39m \u001b[32m'<root><!-- comment --><item>value</item></root>'\u001b[39m\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 152 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 153 |\u001b[39m       expect(normalizeXML(result))\u001b[33m.\u001b[39mtoBe(normalizeXML(expected))\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 154 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 155 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 156 |\u001b[39m     it(\u001b[32m'should handle namespaces correctly'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/unit/core/xjx.test.ts\u001b[39m\u001b[0m\u001b[2m:153:36)\u001b[22m\u001b[2m\u001b[22m\n","testResults":[{"ancestorTitles":["XJX Core","XML to JSON conversion"],"duration":12,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m, \u001b[22m\u001b[32mvalue\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"$val\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nExpected value: \u001b[32m\"value\"\u001b[39m\nReceived value: \u001b[31m{\"$children\": [{\"$val\": \"value\"}]}\u001b[39m\n    at Object.<anonymous> (/Users/summersw/Projects/xjx/test/unit/core/xjx.test.ts:27:45)\n    at Promise.then.completed (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/summersw/Projects/xjx/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/summersw/Projects/xjx/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/summersw/Projects/xjx/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"XJX Core XML to JSON conversion should convert simple XML to JSON","status":"failed","title":"should convert simple XML to JSON"},{"ancestorTitles":["XJX Core","XML to JSON conversion"],"duration":4,"failureMessages":[],"fullName":"XJX Core XML to JSON conversion should handle XML attributes","status":"passed","title":"should handle XML attributes"},{"ancestorTitles":["XJX Core","XML to JSON conversion"],"duration":2,"failureMessages":[],"fullName":"XJX Core XML to JSON conversion should preserve CDATA sections","status":"passed","title":"should preserve CDATA sections"},{"ancestorTitles":["XJX Core","XML to JSON conversion"],"duration":2,"failureMessages":[],"fullName":"XJX Core XML to JSON conversion should preserve comments","status":"passed","title":"should preserve comments"},{"ancestorTitles":["XJX Core","XML to JSON conversion"],"duration":1,"failureMessages":[],"fullName":"XJX Core XML to JSON conversion should handle namespaces correctly","status":"passed","title":"should handle namespaces correctly"},{"ancestorTitles":["XJX Core","JSON to XML conversion"],"duration":6,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"<root><item>value</item></root>\"\u001b[39m\nReceived: \u001b[31m\"<root><item>\u001b[7m \u001b[27mvalue\u001b[7m \u001b[27m</item></root>\"\u001b[39m\n    at Object.<anonymous> (/Users/summersw/Projects/xjx/test/unit/core/xjx.test.ts:82:36)\n    at Promise.then.completed (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/summersw/Projects/xjx/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/summersw/Projects/xjx/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/summersw/Projects/xjx/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"XJX Core JSON to XML conversion should convert simple JSON to XML","status":"failed","title":"should convert simple JSON to XML"},{"ancestorTitles":["XJX Core","JSON to XML conversion"],"duration":2,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"<root><item id=\\\"123\\\">value</item></root>\"\u001b[39m\nReceived: \u001b[31m\"<root><item id=\\\"123\\\">\u001b[7m \u001b[27mvalue\u001b[7m \u001b[27m</item></root>\"\u001b[39m\n    at Object.<anonymous> (/Users/summersw/Projects/xjx/test/unit/core/xjx.test.ts:108:36)\n    at Promise.then.completed (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/summersw/Projects/xjx/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/summersw/Projects/xjx/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/summersw/Projects/xjx/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"XJX Core JSON to XML conversion should handle attributes","status":"failed","title":"should handle attributes"},{"ancestorTitles":["XJX Core","JSON to XML conversion"],"duration":2,"failureMessages":[],"fullName":"XJX Core JSON to XML conversion should generate CDATA sections","status":"passed","title":"should generate CDATA sections"},{"ancestorTitles":["XJX Core","JSON to XML conversion"],"duration":4,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"<root><!-- comment --><item>value</item></root>\"\u001b[39m\nReceived: \u001b[31m\"<root><!-- comment --><item>\u001b[7m \u001b[27mvalue\u001b[7m \u001b[27m</item></root>\"\u001b[39m\n    at Object.<anonymous> (/Users/summersw/Projects/xjx/test/unit/core/xjx.test.ts:153:36)\n    at Promise.then.completed (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/summersw/Projects/xjx/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/summersw/Projects/xjx/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/summersw/Projects/xjx/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/summersw/Projects/xjx/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"XJX Core JSON to XML conversion should generate comments","status":"failed","title":"should generate comments"},{"ancestorTitles":["XJX Core","JSON to XML conversion"],"duration":2,"failureMessages":[],"fullName":"XJX Core JSON to XML conversion should handle namespaces correctly","status":"passed","title":"should handle namespaces correctly"},{"ancestorTitles":["XJX Core","objectToXJX"],"duration":1,"failureMessages":[],"fullName":"XJX Core objectToXJX should convert plain objects to XJX format","status":"passed","title":"should convert plain objects to XJX format"},{"ancestorTitles":["XJX Core","Validation and formatting"],"duration":1,"failureMessages":[],"fullName":"XJX Core Validation and formatting should validate XML correctly","status":"passed","title":"should validate XML correctly"},{"ancestorTitles":["XJX Core","Validation and formatting"],"duration":1,"failureMessages":[],"fullName":"XJX Core Validation and formatting should pretty print XML","status":"passed","title":"should pretty print XML"}]}],"config":{"bail":0,"changedFilesWithAncestor":false,"ci":false,"collectCoverage":false,"collectCoverageFrom":["src/**/*.ts","!src/**/*.d.ts","!src/**/index.ts","!src/xjx.full.ts","!src/core/adapters/dom-adapter.ts"],"coverageDirectory":"/Users/summersw/Projects/xjx/coverage","coverageProvider":"babel","coverageReporters":["json","text","lcov","clover"],"detectLeaks":false,"detectOpenHandles":false,"errorOnDeprecated":false,"expand":false,"findRelatedTests":false,"forceExit":false,"globalTeardown":"/Users/summersw/Projects/xjx/test/jest.teardown.js","json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":7,"noStackTrace":false,"nonFlagArgs":[],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"openHandlesTimeout":1000,"passWithNoTests":false,"projects":[],"reporters":[["default",{}],["/Users/summersw/Projects/xjx/node_modules/jest-html-reporters/index.js",{"publicPath":"reports/","filename":"test-report.html","expand":false,"includeFailureMsg":true,"includeConsoleLog":true}]],"rootDir":"/Users/summersw/Projects/xjx","runTestsByPath":false,"seed":69979257,"skipFilter":false,"snapshotFormat":{"escapeString":false,"printBasicPrototype":false},"testFailureExitCode":1,"testPathPattern":"","testSequencer":"/Users/summersw/Projects/xjx/node_modules/@jest/test-sequencer/build/index.js","testTimeout":10000,"updateSnapshot":"new","useStderr":false,"verbose":true,"watch":false,"watchAll":false,"watchman":true,"workerThreads":false},"endTime":1746070997638,"_reporterOptions":{"publicPath":"reports/","filename":"test-report.html","expand":false,"pageTitle":"","hideIcon":false,"testCommand":"","openReport":false,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":true,"stripSkippedTest":false,"includeFailureMsg":true},"logInfoMapping":{},"attachInfos":{}})