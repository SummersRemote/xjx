window.jest_html_reporters_callback__({"numFailedTestSuites":5,"numFailedTests":21,"numPassedTestSuites":3,"numPassedTests":79,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":2,"numTodoTests":0,"numTotalTestSuites":8,"numTotalTests":100,"startTime":1745548554520,"success":false,"testResults":[{"numFailingTests":7,"numPassingTests":10,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1745548555437,"runtime":561,"slow":false,"start":1745548554876},"testFilePath":"/Users/summersw/Projects/git/xmlToJSON/test/unit/XJX.test.ts","failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mXJX › xmlToJson › should convert a simple XML string to JSON\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m, \u001b[22m\u001b[32mvalue\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected path: \u001b[32m\"$val\"\u001b[39m\n    Received path: \u001b[31m[]\u001b[39m\n\n    Expected value: \u001b[32m\"Test\"\u001b[39m\n    Received value: \u001b[31m{\"$children\": [{\"$val\": \"Test\"}]}\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 29 |\u001b[39m       expect(result\u001b[33m.\u001b[39mroot)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'$children'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 30 |\u001b[39m       expect(result\u001b[33m.\u001b[39mroot\u001b[33m.\u001b[39m$children[\u001b[35m0\u001b[39m])\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'item'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 31 |\u001b[39m       expect(result\u001b[33m.\u001b[39mroot\u001b[33m.\u001b[39m$children[\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39mitem)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'$val'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'Test'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 32 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 33 |\u001b[39m     \u001b[22m\n\u001b[2m     \u001b[90m 34 |\u001b[39m     it(\u001b[32m'should handle XML attributes correctly'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/unit/XJX.test.ts\u001b[39m\u001b[0m\u001b[2m:31:45)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mXJX › xmlToJson › should handle namespaces correctly when enabled\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected path: \u001b[32m\"$ns\"\u001b[39m\n    Received path: \u001b[31m[]\u001b[39m\n\n    Received value: \u001b[31m{\"$attr\": [{\"ns\": {\"$ns\": \"http://www.w3.org/2000/xmlns/\", \"$pre\": \"xmlns\", \"$val\": \"http://example.org\"}}], \"$children\": [{\"item\": {\"$children\": [{\"$val\": \"Test\"}], \"$ns\": \"http://example.org\", \"$pre\": \"ns\"}}]}\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 44 |\u001b[39m       \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m xjx\u001b[33m.\u001b[39mxmlToJson(xml)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 45 |\u001b[39m       \u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 46 |\u001b[39m       expect(result\u001b[33m.\u001b[39mroot)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'$ns'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                           \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 47 |\u001b[39m       expect(result\u001b[33m.\u001b[39mroot\u001b[33m.\u001b[39m$children[\u001b[35m0\u001b[39m])\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'item'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 48 |\u001b[39m       expect(result\u001b[33m.\u001b[39mroot\u001b[33m.\u001b[39m$children[\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39mitem)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'$ns'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'http://example.org'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 49 |\u001b[39m       expect(result\u001b[33m.\u001b[39mroot\u001b[33m.\u001b[39m$children[\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39mitem)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'$pre'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'ns'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/unit/XJX.test.ts\u001b[39m\u001b[0m\u001b[2m:46:27)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mXJX › jsonToXml › should convert a JSON object back to XML\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\n    Expected substring: \u001b[32m\"<item>Test</item>\"\u001b[39m\n    Received string:    \u001b[31m\"<root><item> Test </item></root>\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  99 |\u001b[39m       \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m normalizeXML(xjx\u001b[33m.\u001b[39mjsonToXml(json))\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 100 |\u001b[39m       expect(result)\u001b[33m.\u001b[39mtoContain(\u001b[32m'<root>'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 101 |\u001b[39m       expect(result)\u001b[33m.\u001b[39mtoContain(\u001b[32m'<item>Test</item>'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 102 |\u001b[39m       expect(result)\u001b[33m.\u001b[39mtoContain(\u001b[32m'</root>'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 103 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 104 |\u001b[39m     \u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/unit/XJX.test.ts\u001b[39m\u001b[0m\u001b[2m:101:22)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mXJX › jsonToXml › should include XML declaration when enabled\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoMatch\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected pattern: \u001b[32m/^<\\?xml version=\"1\\.0\" encoding=\"UTF-8\"\\?>/\u001b[39m\n    Received string:  \u001b[31m\"<root> Test </root>\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 107 |\u001b[39m       \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m normalizeXML(xjx\u001b[33m.\u001b[39mjsonToXml(json))\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 108 |\u001b[39m       \u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 109 |\u001b[39m       expect(result)\u001b[33m.\u001b[39mtoMatch(\u001b[35m/^<\\?xml version=\"1\\.0\" encoding=\"UTF-8\"\\?>/\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 110 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 111 |\u001b[39m     \u001b[22m\n\u001b[2m     \u001b[90m 112 |\u001b[39m     it(\u001b[32m'should handle attributes correctly'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/unit/XJX.test.ts\u001b[39m\u001b[0m\u001b[2m:109:22)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mXJX › jsonToXml › should handle attributes correctly\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\n    Expected substring: \u001b[32m\"<item id=\\\"123\\\">Test</item>\"\u001b[39m\n    Received string:    \u001b[31m\"<root><item id=\\\"123\\\"> Test </item></root>\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 127 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 128 |\u001b[39m       \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m normalizeXML(xjx\u001b[33m.\u001b[39mjsonToXml(json))\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 129 |\u001b[39m       expect(result)\u001b[33m.\u001b[39mtoContain(\u001b[32m'<item id=\"123\">Test</item>'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 130 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 131 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 132 |\u001b[39m     it(\u001b[32m'should exclude XML declaration when configured'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/unit/XJX.test.ts\u001b[39m\u001b[0m\u001b[2m:129:22)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mXJX › getPath › should retrieve values using dot notation\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"Test Item\"\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 165 |\u001b[39m       }\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 166 |\u001b[39m       \u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 167 |\u001b[39m       expect(xjx\u001b[33m.\u001b[39mgetPath(json\u001b[33m,\u001b[39m \u001b[32m'root.$children.0.item.$children.0.name.$val'\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[32m'Test Item'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                                                                \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 168 |\u001b[39m       expect(xjx\u001b[33m.\u001b[39mgetPath(json\u001b[33m,\u001b[39m \u001b[32m'root.$children.0.item.$attr.0.id.$val'\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[32m'123'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 169 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 170 |\u001b[39m     \u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/unit/XJX.test.ts\u001b[39m\u001b[0m\u001b[2m:167:80)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mXJX › round-trip XML conversion › should preserve XML content in round-trip conversion\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\n    Expected substring: \u001b[32m\"<title>The Great Gatsby</title>\"\u001b[39m\n    Received string:    \u001b[31m\"<library><book id=\\\"123\\\" available=\\\"true\\\"><title> The Great Gatsby </title><author> F. Scott Fitzgerald </author><year> 1925 </year><!-- Classic American literature --><![CDATA[Contains <markup> that should be preserved]]></book></library>\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 230 |\u001b[39m       \u001b[90m// Check for key elements\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 231 |\u001b[39m       expect(normalizedResult)\u001b[33m.\u001b[39mtoContain(\u001b[32m'<book id=\"123\" available=\"true\">'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 232 |\u001b[39m       expect(normalizedResult)\u001b[33m.\u001b[39mtoContain(\u001b[32m'<title>The Great Gatsby</title>'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 233 |\u001b[39m       expect(normalizedResult)\u001b[33m.\u001b[39mtoContain(\u001b[32m'<author>F. Scott Fitzgerald</author>'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 234 |\u001b[39m       expect(normalizedResult)\u001b[33m.\u001b[39mtoContain(\u001b[32m'<year>1925</year>'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 235 |\u001b[39m       expect(normalizedResult)\u001b[33m.\u001b[39mtoContain(\u001b[32m'<!-- Classic American literature -->'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/unit/XJX.test.ts\u001b[39m\u001b[0m\u001b[2m:232:32)\u001b[22m\u001b[2m\u001b[22m\n","testResults":[{"ancestorTitles":["XJX","xmlToJson"],"duration":5,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m, \u001b[22m\u001b[32mvalue\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"$val\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nExpected value: \u001b[32m\"Test\"\u001b[39m\nReceived value: \u001b[31m{\"$children\": [{\"$val\": \"Test\"}]}\u001b[39m\n    at Object.<anonymous> (/Users/summersw/Projects/git/xmlToJSON/test/unit/XJX.test.ts:31:45)\n    at Promise.then.completed (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"XJX xmlToJson should convert a simple XML string to JSON","status":"failed","title":"should convert a simple XML string to JSON"},{"ancestorTitles":["XJX","xmlToJson"],"duration":2,"failureMessages":[],"fullName":"XJX xmlToJson should handle XML attributes correctly","status":"passed","title":"should handle XML attributes correctly"},{"ancestorTitles":["XJX","xmlToJson"],"duration":1,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"$ns\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"$attr\": [{\"ns\": {\"$ns\": \"http://www.w3.org/2000/xmlns/\", \"$pre\": \"xmlns\", \"$val\": \"http://example.org\"}}], \"$children\": [{\"item\": {\"$children\": [{\"$val\": \"Test\"}], \"$ns\": \"http://example.org\", \"$pre\": \"ns\"}}]}\u001b[39m\n    at Object.<anonymous> (/Users/summersw/Projects/git/xmlToJSON/test/unit/XJX.test.ts:46:27)\n    at Promise.then.completed (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"XJX xmlToJson should handle namespaces correctly when enabled","status":"failed","title":"should handle namespaces correctly when enabled"},{"ancestorTitles":["XJX","xmlToJson"],"duration":1,"failureMessages":[],"fullName":"XJX xmlToJson should handle CDATA sections correctly","status":"passed","title":"should handle CDATA sections correctly"},{"ancestorTitles":["XJX","xmlToJson"],"duration":1,"failureMessages":[],"fullName":"XJX xmlToJson should handle comments correctly when enabled","status":"passed","title":"should handle comments correctly when enabled"},{"ancestorTitles":["XJX","xmlToJson"],"duration":1,"failureMessages":[],"fullName":"XJX xmlToJson should disable namespace handling when configured","status":"passed","title":"should disable namespace handling when configured"},{"ancestorTitles":["XJX","jsonToXml"],"duration":3,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"<item>Test</item>\"\u001b[39m\nReceived string:    \u001b[31m\"<root><item> Test </item></root>\"\u001b[39m\n    at Object.<anonymous> (/Users/summersw/Projects/git/xmlToJSON/test/unit/XJX.test.ts:101:22)\n    at Promise.then.completed (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"XJX jsonToXml should convert a JSON object back to XML","status":"failed","title":"should convert a JSON object back to XML"},{"ancestorTitles":["XJX","jsonToXml"],"duration":1,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoMatch\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected pattern: \u001b[32m/^<\\?xml version=\"1\\.0\" encoding=\"UTF-8\"\\?>/\u001b[39m\nReceived string:  \u001b[31m\"<root> Test </root>\"\u001b[39m\n    at Object.<anonymous> (/Users/summersw/Projects/git/xmlToJSON/test/unit/XJX.test.ts:109:22)\n    at Promise.then.completed (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"XJX jsonToXml should include XML declaration when enabled","status":"failed","title":"should include XML declaration when enabled"},{"ancestorTitles":["XJX","jsonToXml"],"duration":1,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"<item id=\\\"123\\\">Test</item>\"\u001b[39m\nReceived string:    \u001b[31m\"<root><item id=\\\"123\\\"> Test </item></root>\"\u001b[39m\n    at Object.<anonymous> (/Users/summersw/Projects/git/xmlToJSON/test/unit/XJX.test.ts:129:22)\n    at Promise.then.completed (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"XJX jsonToXml should handle attributes correctly","status":"failed","title":"should handle attributes correctly"},{"ancestorTitles":["XJX","jsonToXml"],"duration":1,"failureMessages":[],"fullName":"XJX jsonToXml should exclude XML declaration when configured","status":"passed","title":"should exclude XML declaration when configured"},{"ancestorTitles":["XJX","getPath"],"duration":0,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"Test Item\"\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.<anonymous> (/Users/summersw/Projects/git/xmlToJSON/test/unit/XJX.test.ts:167:80)\n    at Promise.then.completed (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"XJX getPath should retrieve values using dot notation","status":"failed","title":"should retrieve values using dot notation"},{"ancestorTitles":["XJX","getPath"],"duration":0,"failureMessages":[],"fullName":"XJX getPath should return fallback value when path does not exist","status":"passed","title":"should return fallback value when path does not exist"},{"ancestorTitles":["XJX","prettyPrintXml"],"duration":0,"failureMessages":[],"fullName":"XJX prettyPrintXml should format XML with proper indentation","status":"passed","title":"should format XML with proper indentation"},{"ancestorTitles":["XJX","validateXML"],"duration":0,"failureMessages":[],"fullName":"XJX validateXML should return true for valid XML","status":"passed","title":"should return true for valid XML"},{"ancestorTitles":["XJX","validateXML"],"duration":1,"failureMessages":[],"fullName":"XJX validateXML should return false with error message for invalid XML","status":"passed","title":"should return false with error message for invalid XML"},{"ancestorTitles":["XJX","round-trip XML conversion"],"duration":2,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"<title>The Great Gatsby</title>\"\u001b[39m\nReceived string:    \u001b[31m\"<library><book id=\\\"123\\\" available=\\\"true\\\"><title> The Great Gatsby </title><author> F. Scott Fitzgerald </author><year> 1925 </year><!-- Classic American literature --><![CDATA[Contains <markup> that should be preserved]]></book></library>\"\u001b[39m\n    at Object.<anonymous> (/Users/summersw/Projects/git/xmlToJSON/test/unit/XJX.test.ts:232:32)\n    at Promise.then.completed (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"XJX round-trip XML conversion should preserve XML content in round-trip conversion","status":"failed","title":"should preserve XML content in round-trip conversion"},{"ancestorTitles":["XJX","configuration with custom property names"],"duration":1,"failureMessages":[],"fullName":"XJX configuration with custom property names should work with custom property names for XML tokens","status":"passed","title":"should work with custom property names for XML tokens"}]},{"numFailingTests":8,"numPassingTests":5,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1745548555483,"runtime":38,"slow":false,"start":1745548555445},"testFilePath":"/Users/summersw/Projects/git/xmlToJSON/test/unit/core/JSONToXML.test.ts","failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mJSONToXML › serialize › should convert a simple JSON object to XML\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\n    Expected substring: \u001b[32m\"<item>Test</item>\"\u001b[39m\n    Received string:    \u001b[31m\"<root><item> Test </item></root>\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 41 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 42 |\u001b[39m       expect(result)\u001b[33m.\u001b[39mtoContain(\u001b[32m'<root>'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 43 |\u001b[39m       expect(result)\u001b[33m.\u001b[39mtoContain(\u001b[32m'<item>Test</item>'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 44 |\u001b[39m       expect(result)\u001b[33m.\u001b[39mtoContain(\u001b[32m'</root>'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 45 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 46 |\u001b[39m     \u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/unit/core/JSONToXML.test.ts\u001b[39m\u001b[0m\u001b[2m:43:22)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mJSONToXML › serialize › should include XML declaration when enabled\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoMatch\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected pattern: \u001b[32m/^<\\?xml version=\"1\\.0\" encoding=\"UTF-8\"\\?>/\u001b[39m\n    Received string:  \u001b[31m\"<root> Test </root>\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 49 |\u001b[39m       \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m normalizeXML(jsonToXML\u001b[33m.\u001b[39mserialize(json))\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 50 |\u001b[39m       \u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 51 |\u001b[39m       expect(result)\u001b[33m.\u001b[39mtoMatch(\u001b[35m/^<\\?xml version=\"1\\.0\" encoding=\"UTF-8\"\\?>/\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 52 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 53 |\u001b[39m     \u001b[22m\n\u001b[2m     \u001b[90m 54 |\u001b[39m     it(\u001b[32m'should handle attributes'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/unit/core/JSONToXML.test.ts\u001b[39m\u001b[0m\u001b[2m:51:22)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mJSONToXML › serialize › should handle attributes\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\n    Expected substring: \u001b[32m\"<item id=\\\"123\\\">Test</item>\"\u001b[39m\n    Received string:    \u001b[31m\"<root><item id=\\\"123\\\"> Test </item></root>\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 69 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 70 |\u001b[39m       \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m normalizeXML(jsonToXML\u001b[33m.\u001b[39mserialize(json))\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 71 |\u001b[39m       expect(result)\u001b[33m.\u001b[39mtoContain(\u001b[32m'<item id=\"123\">Test</item>'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 72 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 73 |\u001b[39m     \u001b[22m\n\u001b[2m     \u001b[90m 74 |\u001b[39m     it(\u001b[32m'should handle namespaces when enabled'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/unit/core/JSONToXML.test.ts\u001b[39m\u001b[0m\u001b[2m:71:22)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mJSONToXML › serialize › should handle namespaces when enabled\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\n    Expected substring: \u001b[32m\"<ns:item\"\u001b[39m\n    Received string:    \u001b[31m\"<root xmlns=\\\"http://example.org\\\"><item> Test </item></root>\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 91 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 92 |\u001b[39m       expect(result)\u001b[33m.\u001b[39mtoContain(\u001b[32m'xmlns=\"http://example.org\"'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 93 |\u001b[39m       expect(result)\u001b[33m.\u001b[39mtoContain(\u001b[32m'<ns:item'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 94 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 95 |\u001b[39m     \u001b[22m\n\u001b[2m     \u001b[90m 96 |\u001b[39m     it(\u001b[32m'should handle CDATA sections'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/unit/core/JSONToXML.test.ts\u001b[39m\u001b[0m\u001b[2m:93:22)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mJSONToXML › serialize › should handle nested elements\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\n    Expected substring: \u001b[32m\"<child>Child Text</child>\"\u001b[39m\n    Received string:    \u001b[31m\"<root><parent><child> Child Text </child></parent></root>\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 179 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 180 |\u001b[39m       expect(result)\u001b[33m.\u001b[39mtoContain(\u001b[32m'<parent>'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 181 |\u001b[39m       expect(result)\u001b[33m.\u001b[39mtoContain(\u001b[32m'<child>Child Text</child>'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 182 |\u001b[39m       expect(result)\u001b[33m.\u001b[39mtoContain(\u001b[32m'</parent>'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 183 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 184 |\u001b[39m     \u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/unit/core/JSONToXML.test.ts\u001b[39m\u001b[0m\u001b[2m:181:22)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mJSONToXML › serialize › should work with the XMLToJSON parser in a round-trip\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\n    Expected substring: \u001b[32m\"<title>The Great Gatsby</title>\"\u001b[39m\n    Received string:    \u001b[31m\"<library><book id=\\\"123\\\" available=\\\"true\\\"><title> The Great Gatsby </title><author> F. Scott Fitzgerald </author><year> 1925 </year><!-- Classic American literature --><![CDATA[Contains <markup> that should be preserved]]></book></library>\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 203 |\u001b[39m       expect(resultXml)\u001b[33m.\u001b[39mtoContain(\u001b[32m'<library>'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 204 |\u001b[39m       expect(resultXml)\u001b[33m.\u001b[39mtoContain(\u001b[32m'<book id=\"123\" available=\"true\">'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 205 |\u001b[39m       expect(resultXml)\u001b[33m.\u001b[39mtoContain(\u001b[32m'<title>The Great Gatsby</title>'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 206 |\u001b[39m       expect(resultXml)\u001b[33m.\u001b[39mtoContain(\u001b[32m'<author>F. Scott Fitzgerald</author>'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 207 |\u001b[39m       expect(resultXml)\u001b[33m.\u001b[39mtoContain(\u001b[32m'<year>1925</year>'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 208 |\u001b[39m       expect(resultXml)\u001b[33m.\u001b[39mtoContain(\u001b[32m'<!-- Classic American literature -->'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/unit/core/JSONToXML.test.ts\u001b[39m\u001b[0m\u001b[2m:205:25)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mJSONToXML › configuration tests › should not format XML (pretty print) when disabled\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m1\u001b[39m\n    Received: \u001b[31m2\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 249 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 250 |\u001b[39m       \u001b[90m// The XML shouldn't contain formatting newlines and indentation\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 251 |\u001b[39m       expect(result\u001b[33m.\u001b[39msplit(\u001b[32m'\\n'\u001b[39m)\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBe(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// Only the XML declaration might be on its own line\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                         \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 252 |\u001b[39m       expect(result)\u001b[33m.\u001b[39mnot\u001b[33m.\u001b[39mtoContain(\u001b[32m'  '\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// No indentation\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 253 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 254 |\u001b[39m     \u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/unit/core/JSONToXML.test.ts\u001b[39m\u001b[0m\u001b[2m:251:41)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mJSONToXML › configuration tests › should use custom property names when configured\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\n    Expected substring: \u001b[32m\"<item id=\\\"123\\\">Test</item>\"\u001b[39m\n    Received string:    \u001b[31m\"<root><item id=\\\"123\\\"> Test </item></root>\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 314 |\u001b[39m       \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m normalizeXML(customJsonToXML\u001b[33m.\u001b[39mserialize(json))\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 315 |\u001b[39m       \u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 316 |\u001b[39m       expect(result)\u001b[33m.\u001b[39mtoContain(\u001b[32m'<item id=\"123\">Test</item>'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 317 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 318 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 319 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/unit/core/JSONToXML.test.ts\u001b[39m\u001b[0m\u001b[2m:316:22)\u001b[22m\u001b[2m\u001b[22m\n","testResults":[{"ancestorTitles":["JSONToXML","serialize"],"duration":3,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"<item>Test</item>\"\u001b[39m\nReceived string:    \u001b[31m\"<root><item> Test </item></root>\"\u001b[39m\n    at Object.<anonymous> (/Users/summersw/Projects/git/xmlToJSON/test/unit/core/JSONToXML.test.ts:43:22)\n    at Promise.then.completed (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JSONToXML serialize should convert a simple JSON object to XML","status":"failed","title":"should convert a simple JSON object to XML"},{"ancestorTitles":["JSONToXML","serialize"],"duration":0,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoMatch\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected pattern: \u001b[32m/^<\\?xml version=\"1\\.0\" encoding=\"UTF-8\"\\?>/\u001b[39m\nReceived string:  \u001b[31m\"<root> Test </root>\"\u001b[39m\n    at Object.<anonymous> (/Users/summersw/Projects/git/xmlToJSON/test/unit/core/JSONToXML.test.ts:51:22)\n    at Promise.then.completed (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JSONToXML serialize should include XML declaration when enabled","status":"failed","title":"should include XML declaration when enabled"},{"ancestorTitles":["JSONToXML","serialize"],"duration":0,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"<item id=\\\"123\\\">Test</item>\"\u001b[39m\nReceived string:    \u001b[31m\"<root><item id=\\\"123\\\"> Test </item></root>\"\u001b[39m\n    at Object.<anonymous> (/Users/summersw/Projects/git/xmlToJSON/test/unit/core/JSONToXML.test.ts:71:22)\n    at Promise.then.completed (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JSONToXML serialize should handle attributes","status":"failed","title":"should handle attributes"},{"ancestorTitles":["JSONToXML","serialize"],"duration":0,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"<ns:item\"\u001b[39m\nReceived string:    \u001b[31m\"<root xmlns=\\\"http://example.org\\\"><item> Test </item></root>\"\u001b[39m\n    at Object.<anonymous> (/Users/summersw/Projects/git/xmlToJSON/test/unit/core/JSONToXML.test.ts:93:22)\n    at Promise.then.completed (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JSONToXML serialize should handle namespaces when enabled","status":"failed","title":"should handle namespaces when enabled"},{"ancestorTitles":["JSONToXML","serialize"],"duration":0,"failureMessages":[],"fullName":"JSONToXML serialize should handle CDATA sections","status":"passed","title":"should handle CDATA sections"},{"ancestorTitles":["JSONToXML","serialize"],"duration":1,"failureMessages":[],"fullName":"JSONToXML serialize should handle comments when enabled","status":"passed","title":"should handle comments when enabled"},{"ancestorTitles":["JSONToXML","serialize"],"duration":0,"failureMessages":[],"fullName":"JSONToXML serialize should handle processing instructions when enabled","status":"passed","title":"should handle processing instructions when enabled"},{"ancestorTitles":["JSONToXML","serialize"],"duration":1,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"<child>Child Text</child>\"\u001b[39m\nReceived string:    \u001b[31m\"<root><parent><child> Child Text </child></parent></root>\"\u001b[39m\n    at Object.<anonymous> (/Users/summersw/Projects/git/xmlToJSON/test/unit/core/JSONToXML.test.ts:181:22)\n    at Promise.then.completed (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JSONToXML serialize should handle nested elements","status":"failed","title":"should handle nested elements"},{"ancestorTitles":["JSONToXML","serialize"],"duration":1,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"<title>The Great Gatsby</title>\"\u001b[39m\nReceived string:    \u001b[31m\"<library><book id=\\\"123\\\" available=\\\"true\\\"><title> The Great Gatsby </title><author> F. Scott Fitzgerald </author><year> 1925 </year><!-- Classic American literature --><![CDATA[Contains <markup> that should be preserved]]></book></library>\"\u001b[39m\n    at Object.<anonymous> (/Users/summersw/Projects/git/xmlToJSON/test/unit/core/JSONToXML.test.ts:205:25)\n    at Promise.then.completed (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JSONToXML serialize should work with the XMLToJSON parser in a round-trip","status":"failed","title":"should work with the XMLToJSON parser in a round-trip"},{"ancestorTitles":["JSONToXML","configuration tests"],"duration":1,"failureMessages":[],"fullName":"JSONToXML configuration tests should not include XML declaration when disabled","status":"passed","title":"should not include XML declaration when disabled"},{"ancestorTitles":["JSONToXML","configuration tests"],"duration":0,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m1\u001b[39m\nReceived: \u001b[31m2\u001b[39m\n    at Object.<anonymous> (/Users/summersw/Projects/git/xmlToJSON/test/unit/core/JSONToXML.test.ts:251:41)\n    at Promise.then.completed (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JSONToXML configuration tests should not format XML (pretty print) when disabled","status":"failed","title":"should not format XML (pretty print) when disabled"},{"ancestorTitles":["JSONToXML","configuration tests"],"duration":0,"failureMessages":[],"fullName":"JSONToXML configuration tests should not include namespaces when disabled","status":"passed","title":"should not include namespaces when disabled"},{"ancestorTitles":["JSONToXML","configuration tests"],"duration":0,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"<item id=\\\"123\\\">Test</item>\"\u001b[39m\nReceived string:    \u001b[31m\"<root><item id=\\\"123\\\"> Test </item></root>\"\u001b[39m\n    at Object.<anonymous> (/Users/summersw/Projects/git/xmlToJSON/test/unit/core/JSONToXML.test.ts:316:22)\n    at Promise.then.completed (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"JSONToXML configuration tests should use custom property names when configured","status":"failed","title":"should use custom property names when configured"}]},{"numFailingTests":6,"numPassingTests":6,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1745548555520,"runtime":29,"slow":false,"start":1745548555491},"testFilePath":"/Users/summersw/Projects/git/xmlToJSON/test/unit/core/XMLToJSON.test.ts","failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mXMLToJSON › parse › should convert a simple XML string to JSON\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m, \u001b[22m\u001b[32mvalue\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected path: \u001b[32m\"$val\"\u001b[39m\n    Received path: \u001b[31m[]\u001b[39m\n\n    Expected value: \u001b[32m\"Test\"\u001b[39m\n    Received value: \u001b[31m{\"$children\": [{\"$val\": \"Test\"}]}\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 23 |\u001b[39m       expect(result\u001b[33m.\u001b[39mroot)\u001b[33m.\u001b[39mtoHaveProperty(testConfig\u001b[33m.\u001b[39mpropNames\u001b[33m.\u001b[39mchildren)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 24 |\u001b[39m       expect(result\u001b[33m.\u001b[39mroot[testConfig\u001b[33m.\u001b[39mpropNames\u001b[33m.\u001b[39mchildren][\u001b[35m0\u001b[39m])\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'item'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 25 |\u001b[39m       expect(result\u001b[33m.\u001b[39mroot[testConfig\u001b[33m.\u001b[39mpropNames\u001b[33m.\u001b[39mchildren][\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39mitem)\u001b[33m.\u001b[39mtoHaveProperty(testConfig\u001b[33m.\u001b[39mpropNames\u001b[33m.\u001b[39mvalue\u001b[33m,\u001b[39m \u001b[32m'Test'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                                                  \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 26 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 27 |\u001b[39m     \u001b[22m\n\u001b[2m     \u001b[90m 28 |\u001b[39m     it(\u001b[32m'should handle XML attributes'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/unit/core/XMLToJSON.test.ts\u001b[39m\u001b[0m\u001b[2m:25:66)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mXMLToJSON › parse › should handle namespaces when enabled\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected path: \u001b[32m\"$ns\"\u001b[39m\n    Received path: \u001b[31m[]\u001b[39m\n\n    Received value: \u001b[31m{\"$attr\": [{\"ns\": {\"$ns\": \"http://www.w3.org/2000/xmlns/\", \"$pre\": \"xmlns\", \"$val\": \"http://example.org\"}}], \"$children\": [{\"item\": {\"$children\": [{\"$val\": \"Test\"}], \"$ns\": \"http://example.org\", \"$pre\": \"ns\"}}]}\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 44 |\u001b[39m       \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m xmlToJSON\u001b[33m.\u001b[39mparse(xml)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 45 |\u001b[39m       \u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 46 |\u001b[39m       expect(result\u001b[33m.\u001b[39mroot)\u001b[33m.\u001b[39mtoHaveProperty(testConfig\u001b[33m.\u001b[39mpropNames\u001b[33m.\u001b[39mnamespace)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                           \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 47 |\u001b[39m       expect(result\u001b[33m.\u001b[39mroot[testConfig\u001b[33m.\u001b[39mpropNames\u001b[33m.\u001b[39mchildren][\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39mitem)\u001b[33m.\u001b[39mtoHaveProperty(testConfig\u001b[33m.\u001b[39mpropNames\u001b[33m.\u001b[39mnamespace\u001b[33m,\u001b[39m \u001b[32m'http://example.org'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 48 |\u001b[39m       expect(result\u001b[33m.\u001b[39mroot[testConfig\u001b[33m.\u001b[39mpropNames\u001b[33m.\u001b[39mchildren][\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39mitem)\u001b[33m.\u001b[39mtoHaveProperty(testConfig\u001b[33m.\u001b[39mpropNames\u001b[33m.\u001b[39mprefix\u001b[33m,\u001b[39m \u001b[32m'ns'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 49 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/unit/core/XMLToJSON.test.ts\u001b[39m\u001b[0m\u001b[2m:46:27)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mXMLToJSON › parse › should handle nested elements\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m, \u001b[22m\u001b[32mvalue\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected path: \u001b[32m\"$val\"\u001b[39m\n    Received path: \u001b[31m[]\u001b[39m\n\n    Expected value: \u001b[32m\"Child Text\"\u001b[39m\n    Received value: \u001b[31m{\"$children\": [{\"$val\": \"Child Text\"}]}\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 87 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 88 |\u001b[39m       expect(result\u001b[33m.\u001b[39mroot[testConfig\u001b[33m.\u001b[39mpropNames\u001b[33m.\u001b[39mchildren][\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39mparent[testConfig\u001b[33m.\u001b[39mpropNames\u001b[33m.\u001b[39mchildren][\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39mchild)\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 89 |\u001b[39m         \u001b[33m.\u001b[39mtoHaveProperty(testConfig\u001b[33m.\u001b[39mpropNames\u001b[33m.\u001b[39mvalue\u001b[33m,\u001b[39m \u001b[32m'Child Text'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 90 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 91 |\u001b[39m     \u001b[22m\n\u001b[2m     \u001b[90m 92 |\u001b[39m     it(\u001b[32m'should handle empty elements'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/unit/core/XMLToJSON.test.ts\u001b[39m\u001b[0m\u001b[2m:89:10)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mXMLToJSON › parse › should handle empty elements\u001b[39m\u001b[22m\n\n    TypeError: Cannot read properties of undefined (reading 'find')\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  95 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m  96 |\u001b[39m       \u001b[36mconst\u001b[39m children \u001b[33m=\u001b[39m result\u001b[33m.\u001b[39mroot[testConfig\u001b[33m.\u001b[39mpropNames\u001b[33m.\u001b[39mchildren]\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m  97 |\u001b[39m       \u001b[36mconst\u001b[39m emptyElement \u001b[33m=\u001b[39m children\u001b[33m.\u001b[39mfind((child\u001b[33m:\u001b[39m \u001b[33mRecord\u001b[39m\u001b[33m<\u001b[39m\u001b[33mstring\u001b[39m\u001b[33m,\u001b[39m any\u001b[33m>\u001b[39m) \u001b[33m=>\u001b[39m child\u001b[33m.\u001b[39mempty)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m  98 |\u001b[39m       \u001b[36mconst\u001b[39m selfClosingElement \u001b[33m=\u001b[39m children\u001b[33m.\u001b[39mfind((child\u001b[33m:\u001b[39m \u001b[33mRecord\u001b[39m\u001b[33m<\u001b[39m\u001b[33mstring\u001b[39m\u001b[33m,\u001b[39m any\u001b[33m>\u001b[39m) \u001b[33m=>\u001b[39m child[\u001b[32m'self-closing'\u001b[39m])\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m  99 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 100 |\u001b[39m       expect(emptyElement)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/unit/core/XMLToJSON.test.ts\u001b[39m\u001b[0m\u001b[2m:97:37)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mXMLToJSON › configuration tests › should not preserve CDATA sections when disabled\u001b[39m\u001b[22m\n\n    TypeError: Cannot read properties of undefined (reading '0')\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 140 |\u001b[39m       \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m customXmlToJSON\u001b[33m.\u001b[39mparse(xml)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 141 |\u001b[39m       \u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 142 |\u001b[39m       \u001b[36mconst\u001b[39m hasCDATA \u001b[33m=\u001b[39m result\u001b[33m.\u001b[39mroot[testConfig\u001b[33m.\u001b[39mpropNames\u001b[33m.\u001b[39mchildren][\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39mitem[testConfig\u001b[33m.\u001b[39mpropNames\u001b[33m.\u001b[39mchildren]\u001b[33m?\u001b[39m\u001b[33m.\u001b[39msome(\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                                                  \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 143 |\u001b[39m         (child\u001b[33m:\u001b[39m \u001b[33mRecord\u001b[39m\u001b[33m<\u001b[39m\u001b[33mstring\u001b[39m\u001b[33m,\u001b[39m any\u001b[33m>\u001b[39m) \u001b[33m=>\u001b[39m child[testConfig\u001b[33m.\u001b[39mpropNames\u001b[33m.\u001b[39mcdata]\u001b[22m\n\u001b[2m     \u001b[90m 144 |\u001b[39m       )\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 145 |\u001b[39m       \u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/unit/core/XMLToJSON.test.ts\u001b[39m\u001b[0m\u001b[2m:142:66)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mXMLToJSON › configuration tests › should use custom property names when configured\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m, \u001b[22m\u001b[32mvalue\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected path: \u001b[32m\"_val\"\u001b[39m\n    Received path: \u001b[31m[]\u001b[39m\n\n    Expected value: \u001b[32m\"Test\"\u001b[39m\n    Received value: \u001b[31m{\"_attrs\": [{\"id\": {\"_val\": \"123\"}}], \"_children\": [{\"_val\": \"Test\"}]}\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 168 |\u001b[39m       expect(result\u001b[33m.\u001b[39mroot)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'_children'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 169 |\u001b[39m       expect(result\u001b[33m.\u001b[39mroot\u001b[33m.\u001b[39m_children[\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39mitem)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'_attrs'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 170 |\u001b[39m       expect(result\u001b[33m.\u001b[39mroot\u001b[33m.\u001b[39m_children[\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39mitem)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'_val'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'Test'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 171 |\u001b[39m       expect(result\u001b[33m.\u001b[39mroot\u001b[33m.\u001b[39m_children[\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39mitem\u001b[33m.\u001b[39m_attrs[\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39mid)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'_val'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'123'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 172 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 173 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/unit/core/XMLToJSON.test.ts\u001b[39m\u001b[0m\u001b[2m:170:45)\u001b[22m\u001b[2m\u001b[22m\n","testResults":[{"ancestorTitles":["XMLToJSON","parse"],"duration":1,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m, \u001b[22m\u001b[32mvalue\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"$val\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nExpected value: \u001b[32m\"Test\"\u001b[39m\nReceived value: \u001b[31m{\"$children\": [{\"$val\": \"Test\"}]}\u001b[39m\n    at Object.<anonymous> (/Users/summersw/Projects/git/xmlToJSON/test/unit/core/XMLToJSON.test.ts:25:66)\n    at Promise.then.completed (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"XMLToJSON parse should convert a simple XML string to JSON","status":"failed","title":"should convert a simple XML string to JSON"},{"ancestorTitles":["XMLToJSON","parse"],"duration":1,"failureMessages":[],"fullName":"XMLToJSON parse should handle XML attributes","status":"passed","title":"should handle XML attributes"},{"ancestorTitles":["XMLToJSON","parse"],"duration":0,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"$ns\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nReceived value: \u001b[31m{\"$attr\": [{\"ns\": {\"$ns\": \"http://www.w3.org/2000/xmlns/\", \"$pre\": \"xmlns\", \"$val\": \"http://example.org\"}}], \"$children\": [{\"item\": {\"$children\": [{\"$val\": \"Test\"}], \"$ns\": \"http://example.org\", \"$pre\": \"ns\"}}]}\u001b[39m\n    at Object.<anonymous> (/Users/summersw/Projects/git/xmlToJSON/test/unit/core/XMLToJSON.test.ts:46:27)\n    at Promise.then.completed (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"XMLToJSON parse should handle namespaces when enabled","status":"failed","title":"should handle namespaces when enabled"},{"ancestorTitles":["XMLToJSON","parse"],"duration":1,"failureMessages":[],"fullName":"XMLToJSON parse should handle CDATA sections","status":"passed","title":"should handle CDATA sections"},{"ancestorTitles":["XMLToJSON","parse"],"duration":0,"failureMessages":[],"fullName":"XMLToJSON parse should handle comments when enabled","status":"passed","title":"should handle comments when enabled"},{"ancestorTitles":["XMLToJSON","parse"],"duration":0,"failureMessages":[],"fullName":"XMLToJSON parse should handle processing instructions when enabled","status":"passed","title":"should handle processing instructions when enabled"},{"ancestorTitles":["XMLToJSON","parse"],"duration":1,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m, \u001b[22m\u001b[32mvalue\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"$val\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nExpected value: \u001b[32m\"Child Text\"\u001b[39m\nReceived value: \u001b[31m{\"$children\": [{\"$val\": \"Child Text\"}]}\u001b[39m\n    at Object.<anonymous> (/Users/summersw/Projects/git/xmlToJSON/test/unit/core/XMLToJSON.test.ts:89:10)\n    at Promise.then.completed (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"XMLToJSON parse should handle nested elements","status":"failed","title":"should handle nested elements"},{"ancestorTitles":["XMLToJSON","parse"],"duration":0,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'find')\n    at Object.<anonymous> (/Users/summersw/Projects/git/xmlToJSON/test/unit/core/XMLToJSON.test.ts:97:37)\n    at Promise.then.completed (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"XMLToJSON parse should handle empty elements","status":"failed","title":"should handle empty elements"},{"ancestorTitles":["XMLToJSON","configuration tests"],"duration":1,"failureMessages":[],"fullName":"XMLToJSON configuration tests should not preserve namespaces when disabled","status":"passed","title":"should not preserve namespaces when disabled"},{"ancestorTitles":["XMLToJSON","configuration tests"],"duration":0,"failureMessages":[],"fullName":"XMLToJSON configuration tests should not preserve comments when disabled","status":"passed","title":"should not preserve comments when disabled"},{"ancestorTitles":["XMLToJSON","configuration tests"],"duration":0,"failureMessages":["TypeError: Cannot read properties of undefined (reading '0')\n    at Object.<anonymous> (/Users/summersw/Projects/git/xmlToJSON/test/unit/core/XMLToJSON.test.ts:142:66)\n    at Promise.then.completed (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"XMLToJSON configuration tests should not preserve CDATA sections when disabled","status":"failed","title":"should not preserve CDATA sections when disabled"},{"ancestorTitles":["XMLToJSON","configuration tests"],"duration":1,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveProperty\u001b[2m(\u001b[22m\u001b[32mpath\u001b[39m\u001b[2m, \u001b[22m\u001b[32mvalue\u001b[39m\u001b[2m)\u001b[22m\n\nExpected path: \u001b[32m\"_val\"\u001b[39m\nReceived path: \u001b[31m[]\u001b[39m\n\nExpected value: \u001b[32m\"Test\"\u001b[39m\nReceived value: \u001b[31m{\"_attrs\": [{\"id\": {\"_val\": \"123\"}}], \"_children\": [{\"_val\": \"Test\"}]}\u001b[39m\n    at Object.<anonymous> (/Users/summersw/Projects/git/xmlToJSON/test/unit/core/XMLToJSON.test.ts:170:45)\n    at Promise.then.completed (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"XMLToJSON configuration tests should use custom property names when configured","status":"failed","title":"should use custom property names when configured"}]},{"numFailingTests":0,"numPassingTests":20,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1745548555544,"runtime":19,"slow":false,"start":1745548555525},"testFilePath":"/Users/summersw/Projects/git/xmlToJSON/test/unit/core/utils/XMLUtil.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["XMLUtil","prettyPrintXml"],"duration":1,"failureMessages":[],"fullName":"XMLUtil prettyPrintXml should format XML with proper indentation","status":"passed","title":"should format XML with proper indentation"},{"ancestorTitles":["XMLUtil","prettyPrintXml"],"duration":0,"failureMessages":[],"fullName":"XMLUtil prettyPrintXml should handle XML with attributes","status":"passed","title":"should handle XML with attributes"},{"ancestorTitles":["XMLUtil","prettyPrintXml"],"duration":0,"failureMessages":[],"fullName":"XMLUtil prettyPrintXml should handle empty elements correctly","status":"passed","title":"should handle empty elements correctly"},{"ancestorTitles":["XMLUtil","prettyPrintXml"],"duration":1,"failureMessages":[],"fullName":"XMLUtil prettyPrintXml should respect custom indentation","status":"passed","title":"should respect custom indentation"},{"ancestorTitles":["XMLUtil","validateXML"],"duration":0,"failureMessages":[],"fullName":"XMLUtil validateXML should return true for valid XML","status":"passed","title":"should return true for valid XML"},{"ancestorTitles":["XMLUtil","validateXML"],"duration":0,"failureMessages":[],"fullName":"XMLUtil validateXML should return false for XML with unclosed tags","status":"passed","title":"should return false for XML with unclosed tags"},{"ancestorTitles":["XMLUtil","validateXML"],"duration":0,"failureMessages":[],"fullName":"XMLUtil validateXML should return false for XML with malformed attributes","status":"passed","title":"should return false for XML with malformed attributes"},{"ancestorTitles":["XMLUtil","validateXML"],"duration":0,"failureMessages":[],"fullName":"XMLUtil validateXML should return false for non-XML content","status":"passed","title":"should return false for non-XML content"},{"ancestorTitles":["XMLUtil","ensureXMLDeclaration"],"duration":0,"failureMessages":[],"fullName":"XMLUtil ensureXMLDeclaration should add XML declaration if missing","status":"passed","title":"should add XML declaration if missing"},{"ancestorTitles":["XMLUtil","ensureXMLDeclaration"],"duration":0,"failureMessages":[],"fullName":"XMLUtil ensureXMLDeclaration should not add XML declaration if already present","status":"passed","title":"should not add XML declaration if already present"},{"ancestorTitles":["XMLUtil","ensureXMLDeclaration"],"duration":1,"failureMessages":[],"fullName":"XMLUtil ensureXMLDeclaration should handle XML declaration with different attributes","status":"passed","title":"should handle XML declaration with different attributes"},{"ancestorTitles":["XMLUtil","escapeXML & unescapeXML"],"duration":0,"failureMessages":[],"fullName":"XMLUtil escapeXML & unescapeXML should escape special XML characters","status":"passed","title":"should escape special XML characters"},{"ancestorTitles":["XMLUtil","escapeXML & unescapeXML"],"duration":0,"failureMessages":[],"fullName":"XMLUtil escapeXML & unescapeXML should unescape XML entities","status":"passed","title":"should unescape XML entities"},{"ancestorTitles":["XMLUtil","escapeXML & unescapeXML"],"duration":0,"failureMessages":[],"fullName":"XMLUtil escapeXML & unescapeXML should handle round-trip escape/unescape correctly","status":"passed","title":"should handle round-trip escape/unescape correctly"},{"ancestorTitles":["XMLUtil","extractPrefix & extractLocalName"],"duration":0,"failureMessages":[],"fullName":"XMLUtil extractPrefix & extractLocalName should extract namespace prefix from qualified name","status":"passed","title":"should extract namespace prefix from qualified name"},{"ancestorTitles":["XMLUtil","extractPrefix & extractLocalName"],"duration":0,"failureMessages":[],"fullName":"XMLUtil extractPrefix & extractLocalName should return null for names without prefix","status":"passed","title":"should return null for names without prefix"},{"ancestorTitles":["XMLUtil","extractPrefix & extractLocalName"],"duration":0,"failureMessages":[],"fullName":"XMLUtil extractPrefix & extractLocalName should extract local name from qualified name","status":"passed","title":"should extract local name from qualified name"},{"ancestorTitles":["XMLUtil","extractPrefix & extractLocalName"],"duration":1,"failureMessages":[],"fullName":"XMLUtil extractPrefix & extractLocalName should return the name itself for names without prefix","status":"passed","title":"should return the name itself for names without prefix"},{"ancestorTitles":["XMLUtil","createQualifiedName"],"duration":0,"failureMessages":[],"fullName":"XMLUtil createQualifiedName should create qualified name with prefix","status":"passed","title":"should create qualified name with prefix"},{"ancestorTitles":["XMLUtil","createQualifiedName"],"duration":0,"failureMessages":[],"fullName":"XMLUtil createQualifiedName should return only local name when prefix is null","status":"passed","title":"should return only local name when prefix is null"}]},{"numFailingTests":0,"numPassingTests":22,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1745548555567,"runtime":18,"slow":false,"start":1745548555549},"testFilePath":"/Users/summersw/Projects/git/xmlToJSON/test/unit/core/utils/JSONUtil.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["JSONUtil","getPath"],"duration":0,"failureMessages":[],"fullName":"JSONUtil getPath should retrieve values using dot notation","status":"passed","title":"should retrieve values using dot notation"},{"ancestorTitles":["JSONUtil","getPath"],"duration":0,"failureMessages":[],"fullName":"JSONUtil getPath should traverse arrays automatically","status":"passed","title":"should traverse arrays automatically"},{"ancestorTitles":["JSONUtil","getPath"],"duration":0,"failureMessages":[],"fullName":"JSONUtil getPath should return fallback value when path does not exist","status":"passed","title":"should return fallback value when path does not exist"},{"ancestorTitles":["JSONUtil","getPath"],"duration":0,"failureMessages":[],"fullName":"JSONUtil getPath should handle XML-like JSON structures","status":"passed","title":"should handle XML-like JSON structures"},{"ancestorTitles":["JSONUtil","getPath"],"duration":0,"failureMessages":[],"fullName":"JSONUtil getPath should collapse singleton arrays","status":"passed","title":"should collapse singleton arrays"},{"ancestorTitles":["JSONUtil","fromJSONObject"],"duration":1,"failureMessages":[],"fullName":"JSONUtil fromJSONObject should convert a plain JSON object to XML-like JSON structure","status":"passed","title":"should convert a plain JSON object to XML-like JSON structure"},{"ancestorTitles":["JSONUtil","fromJSONObject"],"duration":0,"failureMessages":[],"fullName":"JSONUtil fromJSONObject should wrap result in a root element if provided","status":"passed","title":"should wrap result in a root element if provided"},{"ancestorTitles":["JSONUtil","fromJSONObject"],"duration":0,"failureMessages":[],"fullName":"JSONUtil fromJSONObject should handle arrays correctly","status":"passed","title":"should handle arrays correctly"},{"ancestorTitles":["JSONUtil","fromJSONObject"],"duration":0,"failureMessages":[],"fullName":"JSONUtil fromJSONObject should handle complex root configuration","status":"passed","title":"should handle complex root configuration"},{"ancestorTitles":["JSONUtil","isEmpty"],"duration":0,"failureMessages":[],"fullName":"JSONUtil isEmpty should return true for null and undefined","status":"passed","title":"should return true for null and undefined"},{"ancestorTitles":["JSONUtil","isEmpty"],"duration":0,"failureMessages":[],"fullName":"JSONUtil isEmpty should return true for empty arrays","status":"passed","title":"should return true for empty arrays"},{"ancestorTitles":["JSONUtil","isEmpty"],"duration":0,"failureMessages":[],"fullName":"JSONUtil isEmpty should return true for empty objects","status":"passed","title":"should return true for empty objects"},{"ancestorTitles":["JSONUtil","isEmpty"],"duration":0,"failureMessages":[],"fullName":"JSONUtil isEmpty should return false for non-empty arrays","status":"passed","title":"should return false for non-empty arrays"},{"ancestorTitles":["JSONUtil","isEmpty"],"duration":0,"failureMessages":[],"fullName":"JSONUtil isEmpty should return false for non-empty objects","status":"passed","title":"should return false for non-empty objects"},{"ancestorTitles":["JSONUtil","isEmpty"],"duration":0,"failureMessages":[],"fullName":"JSONUtil isEmpty should return false for primitive values","status":"passed","title":"should return false for primitive values"},{"ancestorTitles":["JSONUtil","safeStringify"],"duration":0,"failureMessages":[],"fullName":"JSONUtil safeStringify should stringify valid JSON objects","status":"passed","title":"should stringify valid JSON objects"},{"ancestorTitles":["JSONUtil","safeStringify"],"duration":0,"failureMessages":[],"fullName":"JSONUtil safeStringify should handle circular references gracefully","status":"passed","title":"should handle circular references gracefully"},{"ancestorTitles":["JSONUtil","safeStringify"],"duration":0,"failureMessages":[],"fullName":"JSONUtil safeStringify should respect custom indent","status":"passed","title":"should respect custom indent"},{"ancestorTitles":["JSONUtil","deepClone and deepMerge"],"duration":1,"failureMessages":[],"fullName":"JSONUtil deepClone and deepMerge should create a deep clone of an object","status":"passed","title":"should create a deep clone of an object"},{"ancestorTitles":["JSONUtil","deepClone and deepMerge"],"duration":0,"failureMessages":[],"fullName":"JSONUtil deepClone and deepMerge should deep merge two objects","status":"passed","title":"should deep merge two objects"},{"ancestorTitles":["JSONUtil","deepClone and deepMerge"],"duration":0,"failureMessages":[],"fullName":"JSONUtil deepClone and deepMerge should handle arrays during merge","status":"passed","title":"should handle arrays during merge"},{"ancestorTitles":["JSONUtil","deepClone and deepMerge"],"duration":0,"failureMessages":[],"fullName":"JSONUtil deepClone and deepMerge should handle null and undefined values","status":"passed","title":"should handle null and undefined values"}]},{"numFailingTests":0,"numPassingTests":16,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1745548555589,"runtime":17,"slow":false,"start":1745548555572},"testFilePath":"/Users/summersw/Projects/git/xmlToJSON/test/unit/core/DOMAdapter.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["DOMAdapter","DOM methods"],"duration":0,"failureMessages":[],"fullName":"DOMAdapter DOM methods should create a DOM parser","status":"passed","title":"should create a DOM parser"},{"ancestorTitles":["DOMAdapter","DOM methods"],"duration":0,"failureMessages":[],"fullName":"DOMAdapter DOM methods should create an XML serializer","status":"passed","title":"should create an XML serializer"},{"ancestorTitles":["DOMAdapter","DOM methods"],"duration":0,"failureMessages":[],"fullName":"DOMAdapter DOM methods should parse XML strings","status":"passed","title":"should parse XML strings"},{"ancestorTitles":["DOMAdapter","DOM methods"],"duration":0,"failureMessages":[],"fullName":"DOMAdapter DOM methods should serialize DOM nodes to XML strings","status":"passed","title":"should serialize DOM nodes to XML strings"},{"ancestorTitles":["DOMAdapter","DOM methods"],"duration":0,"failureMessages":[],"fullName":"DOMAdapter DOM methods should create new documents","status":"passed","title":"should create new documents"},{"ancestorTitles":["DOMAdapter","DOM methods"],"duration":1,"failureMessages":[],"fullName":"DOMAdapter DOM methods should create elements","status":"passed","title":"should create elements"},{"ancestorTitles":["DOMAdapter","DOM methods"],"duration":0,"failureMessages":[],"fullName":"DOMAdapter DOM methods should create elements with namespaces","status":"passed","title":"should create elements with namespaces"},{"ancestorTitles":["DOMAdapter","DOM methods"],"duration":0,"failureMessages":[],"fullName":"DOMAdapter DOM methods should create text nodes","status":"passed","title":"should create text nodes"},{"ancestorTitles":["DOMAdapter","DOM methods"],"duration":0,"failureMessages":[],"fullName":"DOMAdapter DOM methods should create CDATA sections","status":"passed","title":"should create CDATA sections"},{"ancestorTitles":["DOMAdapter","DOM methods"],"duration":0,"failureMessages":[],"fullName":"DOMAdapter DOM methods should create comments","status":"passed","title":"should create comments"},{"ancestorTitles":["DOMAdapter","DOM methods"],"duration":0,"failureMessages":[],"fullName":"DOMAdapter DOM methods should create processing instructions","status":"passed","title":"should create processing instructions"},{"ancestorTitles":["DOMAdapter","Helper methods"],"duration":1,"failureMessages":[],"fullName":"DOMAdapter Helper methods should set namespaced attributes","status":"passed","title":"should set namespaced attributes"},{"ancestorTitles":["DOMAdapter","Helper methods"],"duration":0,"failureMessages":[],"fullName":"DOMAdapter Helper methods should set regular attributes when namespace is null","status":"passed","title":"should set regular attributes when namespace is null"},{"ancestorTitles":["DOMAdapter","Helper methods"],"duration":0,"failureMessages":[],"fullName":"DOMAdapter Helper methods should detect DOM nodes","status":"passed","title":"should detect DOM nodes"},{"ancestorTitles":["DOMAdapter","Helper methods"],"duration":0,"failureMessages":[],"fullName":"DOMAdapter Helper methods should get node type names","status":"passed","title":"should get node type names"},{"ancestorTitles":["DOMAdapter","Helper methods"],"duration":1,"failureMessages":[],"fullName":"DOMAdapter Helper methods should get all node attributes as an object","status":"passed","title":"should get all node attributes as an object"}]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"/Users/summersw/Projects/git/xmlToJSON/test/utils/testUtils.ts","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    Your test suite must contain at least one test.\n\n      \u001b[2mat onResult (\u001b[22mnode_modules/@jest/core/build/TestScheduler.js\u001b[2m:133:18)\u001b[22m\n      \u001b[2mat \u001b[22mnode_modules/@jest/core/build/TestScheduler.js\u001b[2m:254:19\u001b[22m\n      \u001b[2mat \u001b[22mnode_modules/emittery/index.js\u001b[2m:363:13\u001b[22m\n          at Array.map (<anonymous>)\n      \u001b[2mat Emittery.emit (\u001b[22mnode_modules/emittery/index.js\u001b[2m:361:23)\u001b[22m\n","testResults":[]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"/Users/summersw/Projects/git/xmlToJSON/test/jest.setup.ts","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    Your test suite must contain at least one test.\n\n      \u001b[2mat onResult (\u001b[22mnode_modules/@jest/core/build/TestScheduler.js\u001b[2m:133:18)\u001b[22m\n      \u001b[2mat \u001b[22mnode_modules/@jest/core/build/TestScheduler.js\u001b[2m:254:19\u001b[22m\n      \u001b[2mat \u001b[22mnode_modules/emittery/index.js\u001b[2m:363:13\u001b[22m\n          at Array.map (<anonymous>)\n      \u001b[2mat Emittery.emit (\u001b[22mnode_modules/emittery/index.js\u001b[2m:361:23)\u001b[22m\n","testResults":[]}],"config":{"bail":0,"changedFilesWithAncestor":false,"ci":false,"collectCoverage":false,"collectCoverageFrom":["src/**/*.ts","!src/**/*.d.ts","!src/**/index.ts"],"coverageDirectory":"/Users/summersw/Projects/git/xmlToJSON/coverage","coverageProvider":"babel","coverageReporters":["json","text","lcov","clover"],"detectLeaks":false,"detectOpenHandles":false,"errorOnDeprecated":false,"expand":false,"findRelatedTests":false,"forceExit":false,"json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":7,"noStackTrace":false,"nonFlagArgs":[],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"openHandlesTimeout":1000,"passWithNoTests":false,"projects":[],"reporters":[["default",{}],["/Users/summersw/Projects/git/xmlToJSON/node_modules/jest-html-reporters/index.js",{"publicPath":"reports/","filename":"test-report.html","expand":false,"includeFailureMsg":true,"includeConsoleLog":true}]],"rootDir":"/Users/summersw/Projects/git/xmlToJSON","runTestsByPath":false,"seed":1416794856,"skipFilter":false,"snapshotFormat":{"escapeString":false,"printBasicPrototype":false},"testFailureExitCode":1,"testPathPattern":"","testSequencer":"/Users/summersw/Projects/git/xmlToJSON/node_modules/@jest/test-sequencer/build/index.js","updateSnapshot":"new","useStderr":false,"watch":false,"watchAll":false,"watchman":true,"workerThreads":false},"endTime":1745548555624,"_reporterOptions":{"publicPath":"reports/","filename":"test-report.html","expand":false,"pageTitle":"","hideIcon":false,"testCommand":"","openReport":false,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":true,"stripSkippedTest":false,"includeFailureMsg":true},"logInfoMapping":{},"attachInfos":{}})